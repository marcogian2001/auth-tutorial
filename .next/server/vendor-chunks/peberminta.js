"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/peberminta";
exports.ids = ["vendor-chunks/peberminta"];
exports.modules = {

/***/ "(action-browser)/./node_modules/peberminta/lib/core.mjs":
/*!**********************************************!*\
  !*** ./node_modules/peberminta/lib/core.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ab: () => (/* binding */ ab),\n/* harmony export */   abc: () => (/* binding */ abc),\n/* harmony export */   action: () => (/* binding */ action),\n/* harmony export */   ahead: () => (/* binding */ ahead),\n/* harmony export */   all: () => (/* binding */ all),\n/* harmony export */   and: () => (/* binding */ all),\n/* harmony export */   any: () => (/* binding */ any),\n/* harmony export */   chain: () => (/* binding */ chain),\n/* harmony export */   chainReduce: () => (/* binding */ chainReduce),\n/* harmony export */   choice: () => (/* binding */ choice),\n/* harmony export */   condition: () => (/* binding */ condition),\n/* harmony export */   decide: () => (/* binding */ decide),\n/* harmony export */   discard: () => (/* binding */ skip),\n/* harmony export */   eitherOr: () => (/* binding */ otherwise),\n/* harmony export */   emit: () => (/* binding */ emit),\n/* harmony export */   end: () => (/* binding */ end),\n/* harmony export */   eof: () => (/* binding */ end),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   fail: () => (/* binding */ fail),\n/* harmony export */   flatten: () => (/* binding */ flatten),\n/* harmony export */   flatten1: () => (/* binding */ flatten1),\n/* harmony export */   left: () => (/* binding */ left),\n/* harmony export */   leftAssoc1: () => (/* binding */ leftAssoc1),\n/* harmony export */   leftAssoc2: () => (/* binding */ leftAssoc2),\n/* harmony export */   longest: () => (/* binding */ longest),\n/* harmony export */   lookAhead: () => (/* binding */ ahead),\n/* harmony export */   make: () => (/* binding */ make),\n/* harmony export */   many: () => (/* binding */ many),\n/* harmony export */   many1: () => (/* binding */ many1),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   map1: () => (/* binding */ map1),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   middle: () => (/* binding */ middle),\n/* harmony export */   not: () => (/* binding */ not),\n/* harmony export */   of: () => (/* binding */ emit),\n/* harmony export */   option: () => (/* binding */ option),\n/* harmony export */   or: () => (/* binding */ choice),\n/* harmony export */   otherwise: () => (/* binding */ otherwise),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parserPosition: () => (/* binding */ parserPosition),\n/* harmony export */   peek: () => (/* binding */ peek),\n/* harmony export */   recursive: () => (/* binding */ recursive),\n/* harmony export */   reduceLeft: () => (/* binding */ reduceLeft),\n/* harmony export */   reduceRight: () => (/* binding */ reduceRight),\n/* harmony export */   remainingTokensNumber: () => (/* binding */ remainingTokensNumber),\n/* harmony export */   right: () => (/* binding */ right),\n/* harmony export */   rightAssoc1: () => (/* binding */ rightAssoc1),\n/* harmony export */   rightAssoc2: () => (/* binding */ rightAssoc2),\n/* harmony export */   satisfy: () => (/* binding */ satisfy),\n/* harmony export */   sepBy: () => (/* binding */ sepBy),\n/* harmony export */   sepBy1: () => (/* binding */ sepBy1),\n/* harmony export */   skip: () => (/* binding */ skip),\n/* harmony export */   some: () => (/* binding */ many1),\n/* harmony export */   start: () => (/* binding */ start),\n/* harmony export */   takeUntil: () => (/* binding */ takeUntil),\n/* harmony export */   takeUntilP: () => (/* binding */ takeUntilP),\n/* harmony export */   takeWhile: () => (/* binding */ takeWhile),\n/* harmony export */   takeWhileP: () => (/* binding */ takeWhileP),\n/* harmony export */   token: () => (/* binding */ token),\n/* harmony export */   tryParse: () => (/* binding */ tryParse)\n/* harmony export */ });\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.mjs */ \"(action-browser)/./node_modules/peberminta/lib/util.mjs\");\n\nfunction emit(value) {\n    return (data, i)=>({\n            matched: true,\n            position: i,\n            value: value\n        });\n}\nfunction make(f) {\n    return (data, i)=>({\n            matched: true,\n            position: i,\n            value: f(data, i)\n        });\n}\nfunction action(f) {\n    return (data, i)=>{\n        f(data, i);\n        return {\n            matched: true,\n            position: i,\n            value: null\n        };\n    };\n}\nfunction fail(data, i) {\n    return {\n        matched: false\n    };\n}\nfunction error(message) {\n    return (data, i)=>{\n        throw new Error(message instanceof Function ? message(data, i) : message);\n    };\n}\nfunction token(onToken, onEnd) {\n    return (data, i)=>{\n        let position = i;\n        let value = undefined;\n        if (i < data.tokens.length) {\n            value = onToken(data.tokens[i], data, i);\n            if (value !== undefined) {\n                position++;\n            }\n        } else {\n            onEnd?.(data, i);\n        }\n        return value === undefined ? {\n            matched: false\n        } : {\n            matched: true,\n            position: position,\n            value: value\n        };\n    };\n}\nfunction any(data, i) {\n    return i < data.tokens.length ? {\n        matched: true,\n        position: i + 1,\n        value: data.tokens[i]\n    } : {\n        matched: false\n    };\n}\nfunction satisfy(test) {\n    return (data, i)=>i < data.tokens.length && test(data.tokens[i], data, i) ? {\n            matched: true,\n            position: i + 1,\n            value: data.tokens[i]\n        } : {\n            matched: false\n        };\n}\nfunction mapInner(r, f) {\n    return r.matched ? {\n        matched: true,\n        position: r.position,\n        value: f(r.value, r.position)\n    } : r;\n}\nfunction mapOuter(r, f) {\n    return r.matched ? f(r) : r;\n}\nfunction map(p, mapper) {\n    return (data, i)=>mapInner(p(data, i), (v, j)=>mapper(v, data, i, j));\n}\nfunction map1(p, mapper) {\n    return (data, i)=>mapOuter(p(data, i), (m)=>mapper(m, data, i));\n}\nfunction peek(p, f) {\n    return (data, i)=>{\n        const r = p(data, i);\n        f(r, data, i);\n        return r;\n    };\n}\nfunction option(p, def) {\n    return (data, i)=>{\n        const r = p(data, i);\n        return r.matched ? r : {\n            matched: true,\n            position: i,\n            value: def\n        };\n    };\n}\nfunction not(p) {\n    return (data, i)=>{\n        const r = p(data, i);\n        return r.matched ? {\n            matched: false\n        } : {\n            matched: true,\n            position: i,\n            value: true\n        };\n    };\n}\nfunction choice(...ps) {\n    return (data, i)=>{\n        for (const p of ps){\n            const result = p(data, i);\n            if (result.matched) {\n                return result;\n            }\n        }\n        return {\n            matched: false\n        };\n    };\n}\nfunction otherwise(pa, pb) {\n    return (data, i)=>{\n        const r1 = pa(data, i);\n        return r1.matched ? r1 : pb(data, i);\n    };\n}\nfunction longest(...ps) {\n    return (data, i)=>{\n        let match = undefined;\n        for (const p of ps){\n            const result = p(data, i);\n            if (result.matched && (!match || match.position < result.position)) {\n                match = result;\n            }\n        }\n        return match || {\n            matched: false\n        };\n    };\n}\nfunction takeWhile(p, test) {\n    return (data, i)=>{\n        const values = [];\n        let success = true;\n        do {\n            const r = p(data, i);\n            if (r.matched && test(r.value, values.length + 1, data, i, r.position)) {\n                values.push(r.value);\n                i = r.position;\n            } else {\n                success = false;\n            }\n        }while (success);\n        return {\n            matched: true,\n            position: i,\n            value: values\n        };\n    };\n}\nfunction takeUntil(p, test) {\n    return takeWhile(p, (value, n, data, i, j)=>!test(value, n, data, i, j));\n}\nfunction takeWhileP(pValue, pTest) {\n    return takeWhile(pValue, (value, n, data, i)=>pTest(data, i).matched);\n}\nfunction takeUntilP(pValue, pTest) {\n    return takeWhile(pValue, (value, n, data, i)=>!pTest(data, i).matched);\n}\nfunction many(p) {\n    return takeWhile(p, ()=>true);\n}\nfunction many1(p) {\n    return ab(p, many(p), (head, tail)=>[\n            head,\n            ...tail\n        ]);\n}\nfunction ab(pa, pb, join) {\n    return (data, i)=>mapOuter(pa(data, i), (ma)=>mapInner(pb(data, ma.position), (vb, j)=>join(ma.value, vb, data, i, j)));\n}\nfunction left(pa, pb) {\n    return ab(pa, pb, (va)=>va);\n}\nfunction right(pa, pb) {\n    return ab(pa, pb, (va, vb)=>vb);\n}\nfunction abc(pa, pb, pc, join) {\n    return (data, i)=>mapOuter(pa(data, i), (ma)=>mapOuter(pb(data, ma.position), (mb)=>mapInner(pc(data, mb.position), (vc, j)=>join(ma.value, mb.value, vc, data, i, j))));\n}\nfunction middle(pa, pb, pc) {\n    return abc(pa, pb, pc, (ra, rb)=>rb);\n}\nfunction all(...ps) {\n    return (data, i)=>{\n        const result = [];\n        let position = i;\n        for (const p of ps){\n            const r1 = p(data, position);\n            if (r1.matched) {\n                result.push(r1.value);\n                position = r1.position;\n            } else {\n                return {\n                    matched: false\n                };\n            }\n        }\n        return {\n            matched: true,\n            position: position,\n            value: result\n        };\n    };\n}\nfunction skip(...ps) {\n    return map(all(...ps), ()=>null);\n}\nfunction flatten(...ps) {\n    return flatten1(all(...ps));\n}\nfunction flatten1(p) {\n    return map(p, (vs)=>vs.flatMap((v)=>v));\n}\nfunction sepBy1(pValue, pSep) {\n    return ab(pValue, many(right(pSep, pValue)), (head, tail)=>[\n            head,\n            ...tail\n        ]);\n}\nfunction sepBy(pValue, pSep) {\n    return otherwise(sepBy1(pValue, pSep), emit([]));\n}\nfunction chainReduce(acc, f) {\n    return (data, i)=>{\n        let loop = true;\n        let acc1 = acc;\n        let pos = i;\n        do {\n            const r = f(acc1, data, pos)(data, pos);\n            if (r.matched) {\n                acc1 = r.value;\n                pos = r.position;\n            } else {\n                loop = false;\n            }\n        }while (loop);\n        return {\n            matched: true,\n            position: pos,\n            value: acc1\n        };\n    };\n}\nfunction reduceLeft(acc, p, reducer) {\n    return chainReduce(acc, (acc)=>map(p, (v, data, i, j)=>reducer(acc, v, data, i, j)));\n}\nfunction reduceRight(p, acc, reducer) {\n    return map(many(p), (vs, data, i, j)=>vs.reduceRight((acc, v)=>reducer(v, acc, data, i, j), acc));\n}\nfunction leftAssoc1(pLeft, pOper) {\n    return chain(pLeft, (v0)=>reduceLeft(v0, pOper, (acc, f)=>f(acc)));\n}\nfunction rightAssoc1(pOper, pRight) {\n    return ab(reduceRight(pOper, (y)=>y, (f, acc)=>(y)=>f(acc(y))), pRight, (f, v)=>f(v));\n}\nfunction leftAssoc2(pLeft, pOper, pRight) {\n    return chain(pLeft, (v0)=>reduceLeft(v0, ab(pOper, pRight, (f, y)=>[\n                f,\n                y\n            ]), (acc, [f, y])=>f(acc, y)));\n}\nfunction rightAssoc2(pLeft, pOper, pRight) {\n    return ab(reduceRight(ab(pLeft, pOper, (x, f)=>[\n            x,\n            f\n        ]), (y)=>y, ([x, f], acc)=>(y)=>f(x, acc(y))), pRight, (f, v)=>f(v));\n}\nfunction condition(cond, pTrue, pFalse) {\n    return (data, i)=>cond(data, i) ? pTrue(data, i) : pFalse(data, i);\n}\nfunction decide(p) {\n    return (data, i)=>mapOuter(p(data, i), (m1)=>m1.value(data, m1.position));\n}\nfunction chain(p, f) {\n    return (data, i)=>mapOuter(p(data, i), (m1)=>f(m1.value, data, i, m1.position)(data, m1.position));\n}\nfunction ahead(p) {\n    return (data, i)=>mapOuter(p(data, i), (m1)=>({\n                matched: true,\n                position: i,\n                value: m1.value\n            }));\n}\nfunction recursive(f) {\n    return function(data, i) {\n        return f()(data, i);\n    };\n}\nfunction start(data, i) {\n    return i !== 0 ? {\n        matched: false\n    } : {\n        matched: true,\n        position: i,\n        value: true\n    };\n}\nfunction end(data, i) {\n    return i < data.tokens.length ? {\n        matched: false\n    } : {\n        matched: true,\n        position: i,\n        value: true\n    };\n}\nfunction remainingTokensNumber(data, i) {\n    return data.tokens.length - i;\n}\nfunction parserPosition(data, i, formatToken, contextTokens = 3) {\n    const len = data.tokens.length;\n    const lowIndex = (0,_util_mjs__WEBPACK_IMPORTED_MODULE_0__.clamp)(0, i - contextTokens, len - contextTokens);\n    const highIndex = (0,_util_mjs__WEBPACK_IMPORTED_MODULE_0__.clamp)(contextTokens, i + 1 + contextTokens, len);\n    const tokensSlice = data.tokens.slice(lowIndex, highIndex);\n    const lines = [];\n    const indexWidth = String(highIndex - 1).length + 1;\n    if (i < 0) {\n        lines.push(`${String(i).padStart(indexWidth)} >>`);\n    }\n    if (0 < lowIndex) {\n        lines.push(\"...\".padStart(indexWidth + 6));\n    }\n    for(let j = 0; j < tokensSlice.length; j++){\n        const index = lowIndex + j;\n        lines.push(`${String(index).padStart(indexWidth)} ${index === i ? \">\" : \" \"} ${(0,_util_mjs__WEBPACK_IMPORTED_MODULE_0__.escapeWhitespace)(formatToken(tokensSlice[j]))}`);\n    }\n    if (highIndex < len) {\n        lines.push(\"...\".padStart(indexWidth + 6));\n    }\n    if (len <= i) {\n        lines.push(`${String(i).padStart(indexWidth)} >>`);\n    }\n    return lines.join(\"\\n\");\n}\nfunction parse(parser, tokens, options, formatToken = JSON.stringify) {\n    const data = {\n        tokens: tokens,\n        options: options\n    };\n    const result = parser(data, 0);\n    if (!result.matched) {\n        throw new Error(\"No match\");\n    }\n    if (result.position < data.tokens.length) {\n        throw new Error(`Partial match. Parsing stopped at:\\n${parserPosition(data, result.position, formatToken)}`);\n    }\n    return result.value;\n}\nfunction tryParse(parser, tokens, options) {\n    const result = parser({\n        tokens: tokens,\n        options: options\n    }, 0);\n    return result.matched ? result.value : undefined;\n}\nfunction match(matcher, tokens, options) {\n    const result = matcher({\n        tokens: tokens,\n        options: options\n    }, 0);\n    return result.value;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/peberminta/lib/core.mjs\n");

/***/ }),

/***/ "(action-browser)/./node_modules/peberminta/lib/util.mjs":
/*!**********************************************!*\
  !*** ./node_modules/peberminta/lib/util.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clamp: () => (/* binding */ clamp),\n/* harmony export */   escapeWhitespace: () => (/* binding */ escapeWhitespace)\n/* harmony export */ });\nfunction clamp(left, x, right) {\n    return Math.max(left, Math.min(x, right));\n}\nfunction escapeWhitespace(str) {\n    return str.replace(/(\\t)|(\\r)|(\\n)/g, (m, t, r)=>t ? \"\\\\t\" : r ? \"\\\\r\" : \"\\\\n\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wZWJlcm1pbnRhL2xpYi91dGlsLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLFNBQVNBLE1BQU1DLElBQUksRUFBRUMsQ0FBQyxFQUFFQyxLQUFLO0lBQ3pCLE9BQU9DLEtBQUtDLEdBQUcsQ0FBQ0osTUFBTUcsS0FBS0UsR0FBRyxDQUFDSixHQUFHQztBQUN0QztBQUNBLFNBQVNJLGlCQUFpQkMsR0FBRztJQUN6QixPQUFPQSxJQUFJQyxPQUFPLENBQUMsbUJBQW1CLENBQUNDLEdBQUdDLEdBQUdDLElBQU1ELElBQUksUUFBUUMsSUFBSSxRQUFRO0FBQy9FO0FBRW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9wZWJlcm1pbnRhL2xpYi91dGlsLm1qcz8zY2YwIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGNsYW1wKGxlZnQsIHgsIHJpZ2h0KSB7XG4gICAgcmV0dXJuIE1hdGgubWF4KGxlZnQsIE1hdGgubWluKHgsIHJpZ2h0KSk7XG59XG5mdW5jdGlvbiBlc2NhcGVXaGl0ZXNwYWNlKHN0cikge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvKFxcdCl8KFxccil8KFxcbikvZywgKG0sIHQsIHIpID0+IHQgPyAnXFxcXHQnIDogciA/ICdcXFxccicgOiAnXFxcXG4nKTtcbn1cblxuZXhwb3J0IHsgY2xhbXAsIGVzY2FwZVdoaXRlc3BhY2UgfTtcbiJdLCJuYW1lcyI6WyJjbGFtcCIsImxlZnQiLCJ4IiwicmlnaHQiLCJNYXRoIiwibWF4IiwibWluIiwiZXNjYXBlV2hpdGVzcGFjZSIsInN0ciIsInJlcGxhY2UiLCJtIiwidCIsInIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/peberminta/lib/util.mjs\n");

/***/ })

};
;